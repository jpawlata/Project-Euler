# Author: Justyna Pawlata
# Project Euler (https://projecteuler.net/)

# Problem 8:
# The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
# 7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843
# 8586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557
# 6689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749
# 3035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776
# 6572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397
# 5369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474
# 8216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586
# 1786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408
# 0719840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606
# 0588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
# Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?

from functools import reduce 

number = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843\
8586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557\
6689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749\
3035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776\
6572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397\
5369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474\
8216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586\
1786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408\
0719840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606\
0588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450"

def thirteenDigitsProdMax(number):
    product_max = 0
    for i in range(1, 1000+1):
        data = number[i-1:i+12]
        if len(data) < 13: break
        product_temp = reduce((lambda x, y: int(x) * int(y)), data)
     
        if product_temp > product_max:
            product_max = product_temp

    return product_max

answer = thirteenDigitsProdMax(number)
print(answer)